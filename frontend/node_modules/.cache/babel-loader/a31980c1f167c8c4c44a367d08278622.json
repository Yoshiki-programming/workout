{"ast":null,"code":"import _asyncToGenerator from \"/Users/yoshiki_work/\\u30DB\\u309A\\u30FC\\u30C8\\u30D5\\u30A9\\u30EA\\u30AA/workout/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LineChart from \"./LineChart\";\nexport default {\n  name: \"MyGraph\",\n  components: {\n    LineChart: LineChart\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      data: [],\n      loaded: false,\n      chartData: {\n        labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        datasets: [{\n          label: \"重量の伸び率\",\n          fill: false,\n          tension: 0.1,\n          borderColor: \"rgb(75, 192, 192)\",\n          data: []\n        }]\n      },\n      chartData2: {\n        labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        datasets: [{\n          label: \"回数の伸び率\",\n          fill: false,\n          tension: 0.1,\n          borderColor: \"#EC407A\",\n          data: []\n        }]\n      },\n      options: {\n        indexAxis: \"y\",\n        scales: {\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"過去15セット()\"\n            }\n          }],\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"重量(KG)\"\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 10\n            }\n          }]\n        }\n      },\n      options2: {\n        indexAxis: \"y\",\n        scales: {\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"過去15セット\"\n            }\n          }],\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"回数(回)\"\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 5\n            }\n          }]\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var records, json;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.loaded = false;\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"/api/workout-records/\".concat(_this.id, \"/\"));\n\n            case 4:\n              records = _context.sent;\n              _context.next = 7;\n              return records.json();\n\n            case 7:\n              json = _context.sent;\n              // console.log(json.results.map((obj) => obj.weight).reverse());\n              _this.chartData.datasets[0].data = json.results.map(function (obj) {\n                return obj.weight;\n              }).reverse();\n              _this.chartData2.datasets[0].data = json.results.map(function (obj) {\n                return obj.reps;\n              }).reverse();\n              _this.loaded = true;\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;EACAA,eADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CALA;EAWAC;IAAA;MACAA,QADA;MAEAC,aAFA;MAGAC;QACAC,2DADA;QAEAC,WACA;UACAC,eADA;UAEAC,WAFA;UAGAC,YAHA;UAIAC,gCAJA;UAKAR;QALA,CADA;MAFA,CAHA;MAeAS;QACAN,2DADA;QAEAC,WACA;UACAC,eADA;UAEAC,WAFA;UAGAC,YAHA;UAIAC,sBAJA;UAKAR;QALA,CADA;MAFA,CAfA;MA2BAU;QACAC,cADA;QAEAC;UACAC,QACA;YACAC;cACAC,aADA;cAEAC;YAFA;UADA,CADA,CADA;UASAC,QACA;YACAH;cACAC,aADA;cAEAC;YAFA,CADA;YAKAE;cACAC,iBADA;cAEAC;YAFA;UALA,CADA;QATA;MAFA,CA3BA;MAoDAC;QACAV,cADA;QAEAC;UACAC,QACA;YACAC;cACAC,aADA;cAEAC;YAFA;UADA,CADA,CADA;UASAC,QACA;YACAH;cACAC,aADA;cAEAC;YAFA,CADA;YAKAE;cACAC,iBADA;cAEAC;YAFA;UALA,CADA;QATA;MAFA;IApDA;EAAA,CAXA;EAyFAE,OAzFA,qBAyFA;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACA;cADA;cAAA;cAAA,OAGAC,oDAHA;;YAAA;cAGAC,OAHA;cAAA;cAAA,OAIAA,cAJA;;YAAA;cAIAC,IAJA;cAKA;cACA,gDACAC,GADA,CACA;gBAAA;cAAA,CADA,EAEAC,OAFA;cAGA,iDACAD,GADA,CACA;gBAAA;cAAA,CADA,EAEAC,OAFA;cAGA;cAZA;cAAA;;YAAA;cAAA;cAAA;cAcAC;;YAdA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAgBA;AAzGA","names":["name","components","LineChart","props","id","type","required","data","loaded","chartData","labels","datasets","label","fill","tension","borderColor","chartData2","options","indexAxis","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","beginAtZero","stepSize","options2","mounted","fetch","records","json","map","reverse","console"],"sourceRoot":"src/views","sources":["MyGraph.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row justify=\"center\">\n      <div>トレーニングの重量と回数のグラフ</div>\n    </v-row>\n    <v-div>\n      <v-card class=\"my-5 mx-2\" color=\"#fbfbfd\" elevation=\"5\">\n      <LineChart v-if=\"loaded\" :chart-data=\"chartData\" :options=\"options\" />\n      <LineChart v-if=\"loaded\" :chart-data=\"chartData2\" :options=\"options2\" />\n    </v-card>\n    </v-div>\n    <v-row justify=\"center\">\n      <v-btn\n        :to=\"{\n          name: 'MyRecord',\n          params: { id: this.id },\n        }\"\n        color=\"primary\"\n        text\n        class=\"mx-2 my-5\"\n        >戻る\n      </v-btn>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport LineChart from \"./LineChart\";\nexport default {\n  name: \"MyGraph\",\n  components: {\n    LineChart,\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true,\n    },\n  },\n  data: () => ({\n    data: [],\n    loaded: false,\n    chartData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      datasets: [\n        {\n          label: \"重量の伸び率\",\n          fill: false,\n          tension: 0.1,\n          borderColor: \"rgb(75, 192, 192)\",\n          data: [],\n        },\n      ],\n    },\n    chartData2: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      datasets: [\n        {\n          label: \"回数の伸び率\",\n          fill: false,\n          tension: 0.1,\n          borderColor: \"#EC407A\",\n          data: [],\n        },\n      ],\n    },\n    options: {\n      indexAxis: \"y\",\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"過去15セット()\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"重量(KG)\",\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 10,\n            },\n          },\n        ],\n      },\n    },\n    options2: {\n      indexAxis: \"y\",\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"過去15セット\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"回数(回)\",\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 5,\n            },\n          },\n        ],\n      },\n    },\n  }),\n  async mounted() {\n    this.loaded = false;\n    try {\n      const records = await fetch(`/api/workout-records/${this.id}/`);\n      const json = await records.json();\n      // console.log(json.results.map((obj) => obj.weight).reverse());\n      this.chartData.datasets[0].data = json.results\n        .map((obj) => obj.weight)\n        .reverse();\n      this.chartData2.datasets[0].data = json.results\n        .map((obj) => obj.reps)\n        .reverse();\n      this.loaded = true;\n    } catch (e) {\n      console.error(e);\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}