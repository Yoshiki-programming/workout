{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LineChart from \"./LineChart\";\nexport default {\n  name: \"MyGraph\",\n  components: {\n    LineChart\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n  data: () => ({\n    data: [],\n    loaded: false,\n    chartData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      datasets: [{\n        label: \"重量の伸び率\",\n        fill: false,\n        tension: 0.1,\n        borderColor: \"rgb(75, 192, 192)\",\n        data: []\n      }]\n    },\n    chartData2: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      datasets: [{\n        label: \"回数の伸び率\",\n        fill: false,\n        tension: 0.1,\n        borderColor: \"#EC407A\",\n        data: []\n      }]\n    },\n    options: {\n      indexAxis: \"y\",\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"過去15セット()\"\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"重量(KG)\"\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 10\n          }\n        }]\n      }\n    },\n    options2: {\n      indexAxis: \"y\",\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"過去15セット\"\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"回数(回)\"\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 5\n          }\n        }]\n      }\n    }\n  }),\n\n  async mounted() {\n    this.loaded = false;\n\n    try {\n      const records = await fetch(`/api/workout-records/${this.id}/`);\n      const json = await records.json(); // console.log(json.results.map((obj) => obj.weight).reverse());\n\n      this.chartData.datasets[0].data = json.results.map(obj => obj.weight).reverse();\n      this.chartData2.datasets[0].data = json.results.map(obj => obj.reps).reverse();\n      this.loaded = true;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;EACAA,eADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CALA;EAWAC;IACAA,QADA;IAEAC,aAFA;IAGAC;MACAC,2DADA;MAEAC,WACA;QACAC,eADA;QAEAC,WAFA;QAGAC,YAHA;QAIAC,gCAJA;QAKAR;MALA,CADA;IAFA,CAHA;IAeAS;MACAN,2DADA;MAEAC,WACA;QACAC,eADA;QAEAC,WAFA;QAGAC,YAHA;QAIAC,sBAJA;QAKAR;MALA,CADA;IAFA,CAfA;IA2BAU;MACAC,cADA;MAEAC;QACAC,QACA;UACAC;YACAC,aADA;YAEAC;UAFA;QADA,CADA,CADA;QASAC,QACA;UACAH;YACAC,aADA;YAEAC;UAFA,CADA;UAKAE;YACAC,iBADA;YAEAC;UAFA;QALA,CADA;MATA;IAFA,CA3BA;IAoDAC;MACAV,cADA;MAEAC;QACAC,QACA;UACAC;YACAC,aADA;YAEAC;UAFA;QADA,CADA,CADA;QASAC,QACA;UACAH;YACAC,aADA;YAEAC;UAFA,CADA;UAKAE;YACAC,iBADA;YAEAC;UAFA;QALA,CADA;MATA;IAFA;EApDA,EAXA;;EAyFA;IACA;;IACA;MACA;MACA,kCAFA,CAGA;;MACA,+CACAE,GADA,CACAC,iBADA,EAEAC,OAFA;MAGA,gDACAF,GADA,CACAC,eADA,EAEAC,OAFA;MAGA;IACA,CAXA,CAWA;MACAC;IACA;EACA;;AAzGA","names":["name","components","LineChart","props","id","type","required","data","loaded","chartData","labels","datasets","label","fill","tension","borderColor","chartData2","options","indexAxis","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","beginAtZero","stepSize","options2","map","obj","reverse","console"],"sourceRoot":"src/views","sources":["MyGraph.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row justify=\"center\">\n      <div>トレーニングの重量と回数のグラフ</div>\n    </v-row>\n    <div v-if=\"this.chartData.datasets[0] || this.chartData2.datasets[0]\">\n      <v-card class=\"my-5 mx-2\" color=\"#fbfbfd\" elevation=\"5\">\n        <LineChart v-if=\"loaded\" :chart-data=\"chartData\" :options=\"options\" />\n        <LineChart v-if=\"loaded\" :chart-data=\"chartData2\" :options=\"options2\" />\n      </v-card>\n    </div>\n    <div v-else>\n      <v-container class=\"text-center\">記録はまだありません。</v-container>\n    </div>\n    <v-row justify=\"center\">\n      <v-btn\n        :to=\"{\n          name: 'MyRecord',\n          params: { id: this.id },\n        }\"\n        color=\"primary\"\n        text\n        class=\"mx-2 my-5\"\n        >戻る\n      </v-btn>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport LineChart from \"./LineChart\";\nexport default {\n  name: \"MyGraph\",\n  components: {\n    LineChart,\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true,\n    },\n  },\n  data: () => ({\n    data: [],\n    loaded: false,\n    chartData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      datasets: [\n        {\n          label: \"重量の伸び率\",\n          fill: false,\n          tension: 0.1,\n          borderColor: \"rgb(75, 192, 192)\",\n          data: [],\n        },\n      ],\n    },\n    chartData2: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      datasets: [\n        {\n          label: \"回数の伸び率\",\n          fill: false,\n          tension: 0.1,\n          borderColor: \"#EC407A\",\n          data: [],\n        },\n      ],\n    },\n    options: {\n      indexAxis: \"y\",\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"過去15セット()\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"重量(KG)\",\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 10,\n            },\n          },\n        ],\n      },\n    },\n    options2: {\n      indexAxis: \"y\",\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"過去15セット\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"回数(回)\",\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 5,\n            },\n          },\n        ],\n      },\n    },\n  }),\n  async mounted() {\n    this.loaded = false;\n    try {\n      const records = await fetch(`/api/workout-records/${this.id}/`);\n      const json = await records.json();\n      // console.log(json.results.map((obj) => obj.weight).reverse());\n      this.chartData.datasets[0].data = json.results\n        .map((obj) => obj.weight)\n        .reverse();\n      this.chartData2.datasets[0].data = json.results\n        .map((obj) => obj.reps)\n        .reverse();\n      this.loaded = true;\n    } catch (e) {\n      console.error(e);\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}