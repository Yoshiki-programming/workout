{"ast":null,"code":"import _toConsumableArray from \"/Users/yoshiki_work/\\u30DB\\u309A\\u30FC\\u30C8\\u30D5\\u30A9\\u30EA\\u30AA/workout/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"../common/api.service.js\";\nimport { Line } from \"vue-chartjs\";\nexport default Line.extend({\n  name: \"MyGraph\",\n  props: {\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      workoutrecords: [],\n      workout_id: null,\n      weight: null,\n      reps: null,\n      date: null,\n      memo: null,\n      next: null,\n      loading: false,\n      name: null,\n      datacollection: {\n        //Data to be represented on x-axis\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n        datasets: [{\n          label: \"Data One\",\n          backgroundColor: \"#f87979\",\n          pointBackgroundColor: \"white\",\n          borderWidth: 1,\n          pointBorderColor: \"#249EBF\",\n          //Data to be represented on y-axis\n          data: [40, 20, 30, 50, 90, 10, 20, 40, 50, 70, 90, 100]\n        }]\n      },\n      //Chart.js options that controls the appearance of the chart\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            },\n            gridLines: {\n              display: true\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              display: false\n            }\n          }]\n        },\n        legend: {\n          display: true\n        },\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  },\n  methods: {\n    getWorkoutRecords: function getWorkoutRecords() {\n      var _this = this;\n\n      var endpoint = \"/api/workout-records/\".concat(this.id, \"/\");\n\n      if (this.next) {\n        endpoint = this.next;\n      }\n\n      this.loading = true;\n      apiService(endpoint).then(function (data) {\n        var _this$workoutrecords;\n\n        (_this$workoutrecords = _this.workoutrecords).push.apply(_this$workoutrecords, _toConsumableArray(data.results));\n\n        _this.loading = false;\n\n        if (data.next) {\n          _this.next = data.next;\n        } else {\n          _this.next = null;\n        }\n\n        console.log(_this.workoutrecords);\n      });\n    }\n  },\n  created: function created() {\n    this.getWorkoutRecords(); // console.log(\"record\", this.workoutrecords);\n    // console.log(\"id:\", this.id);\n  },\n  mounted: function mounted() {\n    //renderChart function renders the chart with the datacollection and options object.\n    this.renderChart(this.datacollection, this.options);\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;EACAA,eADA;EAEAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CAFA;EAQAC,IARA,kBAQA;IACA;MACAC,kBADA;MAEAC,gBAFA;MAGAC,YAHA;MAIAC,UAJA;MAKAC,UALA;MAMAC,UANA;MAOAC,UAPA;MAQAC,cARA;MASAb,UATA;MAUAc;QACA;QACAC,SACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CAFA;QAgBAC,WACA;UACAC,iBADA;UAEAC,0BAFA;UAGAC,6BAHA;UAIAC,cAJA;UAKAC,2BALA;UAMA;UACAhB;QAPA,CADA;MAhBA,CAVA;MAsCA;MACAiB;QACAC;UACAC,QACA;YACAC;cACAC;YADA,CADA;YAIAC;cACAC;YADA;UAJA,CADA,CADA;UAWAC,QACA;YACAF;cACAC;YADA;UADA,CADA;QAXA,CADA;QAoBAE;UACAF;QADA,CApBA;QAuBAG,gBAvBA;QAwBAC;MAxBA;IAvCA;EAkEA,CA3EA;EA4EAC;IACAC,iBADA,+BACA;MAAA;;MACA;;MACA;QACAC;MACA;;MACA;MACAC;QAAA;;QACA;;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;;QACAC;MACA,CATA;IAUA;EAjBA,CA5EA;EA+FAC,OA/FA,qBA+FA;IACA,yBADA,CAEA;IACA;EACA,CAnGA;EAoGAC,OApGA,qBAoGA;IACA;IACA;EACA;AAvGA","names":["name","props","id","type","required","data","workoutrecords","workout_id","weight","reps","date","memo","next","loading","datacollection","labels","datasets","label","backgroundColor","pointBackgroundColor","borderWidth","pointBorderColor","options","scales","yAxes","ticks","beginAtZero","gridLines","display","xAxes","legend","responsive","maintainAspectRatio","methods","getWorkoutRecords","endpoint","apiService","console","created","mounted"],"sourceRoot":"src/views","sources":["MyGraph.vue"],"sourcesContent":["<template>\n  <div>\n    <v-main>\n      <v-card outlined class=\"mx-2\">\n        <div>{{ this.id }}</div>\n      </v-card>\n      <v-row justify=\"center\">\n        <v-btn\n          v-if=\"this.workoutrecords[0]\"\n          :to=\"{\n            name: 'MyRecord',\n            params: { id: this.id },\n          }\"\n          color=\"primary\"\n          text\n          class=\"mx-2 my-5\"\n          >戻る\n        </v-btn>\n      </v-row>\n    </v-main>\n  </div>\n</template>\n\n<script>\nimport { apiService } from \"../common/api.service.js\";\nimport { Line } from \"vue-chartjs\";\nexport default Line.extend({\n  name: \"MyGraph\",\n  props: {\n    id: {\n      type: Number,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      workoutrecords: [],\n      workout_id: null,\n      weight: null,\n      reps: null,\n      date: null,\n      memo: null,\n      next: null,\n      loading: false,\n      name: null,\n      datacollection: {\n        //Data to be represented on x-axis\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"Data One\",\n            backgroundColor: \"#f87979\",\n            pointBackgroundColor: \"white\",\n            borderWidth: 1,\n            pointBorderColor: \"#249EBF\",\n            //Data to be represented on y-axis\n            data: [40, 20, 30, 50, 90, 10, 20, 40, 50, 70, 90, 100],\n          },\n        ],\n      },\n      //Chart.js options that controls the appearance of the chart\n      options: {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n              gridLines: {\n                display: true,\n              },\n            },\n          ],\n          xAxes: [\n            {\n              gridLines: {\n                display: false,\n              },\n            },\n          ],\n        },\n        legend: {\n          display: true,\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    };\n  },\n  methods: {\n    getWorkoutRecords() {\n      let endpoint = `/api/workout-records/${this.id}/`;\n      if (this.next) {\n        endpoint = this.next;\n      }\n      this.loading = true;\n      apiService(endpoint).then((data) => {\n        this.workoutrecords.push(...data.results);\n        this.loading = false;\n        if (data.next) {\n          this.next = data.next;\n        } else {\n          this.next = null;\n        }\n        console.log(this.workoutrecords);\n      });\n    },\n  },\n  created() {\n    this.getWorkoutRecords();\n    // console.log(\"record\", this.workoutrecords);\n    // console.log(\"id:\", this.id);\n  },\n  mounted() {\n    //renderChart function renders the chart with the datacollection and options object.\n    this.renderChart(this.datacollection, this.options);\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}